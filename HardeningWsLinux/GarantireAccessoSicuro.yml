---
- name: Garantire accesso sicuro
  hosts: localhost
  ignore_errors: true

  tasks:

    - name: set varibles
      set_fact:
        ansible_become_password: "tobeseto"

    - name: Check sshd
      shell: "systemctl status sshd.service | egrep -i 'active' | wc -l"
      register: result

    - name: debug result
      debug:
        var: result

    - name: Check telnetd deamon
      #become: true
      shell: "ps - aux | grep telnet | wc -l"
      register: result1

    - name: debug result1
      debug:
        var: result1 

    - name: Check results
      assert:
        that:
             - "'1' in result.stdout_lines"
             - "'0' in result1.stdout_lines"





- name: password robuste
  hosts: localhost
  ignore_errors: true

  tasks:
    - name: Check1
      shell: "grep '@include common-password' /etc/pam.d/sshd /etc/pam.d/passwd /etc/pam.d/login /etc/pam.d/newusers /etc/pam.d/other | wc -l"
      register: result

    - name: debug result
      debug:
        var: result

    - name: Check results
      assert:
        that:
             - "'5' in result.stdout_lines"

    - name: Check2
      shell: "awk '/^password.*pam_pwquality.so/ {print}' /etc/pam.d/common-password | wc -l"
      register: result

    - name: debug result
      debug:
        var: result

    - name: Check results
      assert:
        that:
             - "'1' in result.stdout_lines"



- name: Account Lockout
  hosts: localhost
  ignore_errors: true

  tasks:
    - name: Check faillock
      shell: "grep pam_faillock /etc/pam.d/* | head -n1 | wc -l"
      register: result

    - name: debug result
      debug:
        var: result

    - name: Check results
      assert:
        that:
             - "'1' in result.stdout_lines"


- name: Accounts di root
  hosts: localhost
  ignore_errors: true

  tasks:
    - name: Check uid
      shell: "awk -F: '$3==0 {print $1 " uid "$3}' /etc/passwd | wc -l"
      register: result

    - name: debug result
      debug:
        var: result

    - name: Check results
      assert:
        that:
             - "'1' in result.stdout_lines"
